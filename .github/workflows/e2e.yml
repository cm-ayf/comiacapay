name: E2E Tests

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      playwright-version: ${{ steps.get-playwright-version.outputs.playwright-version }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
      - id: get-playwright-version
        run: echo "playwright-version=$(jq '.devDependencies["@playwright/test"]' -r package.json)" >> $GITHUB_OUTPUT

  run:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: mcr.microsoft.com/playwright:v${{ needs.build.outputs.playwright-version }}
      options: --user 1001
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        shard: [1, 2, 3, 4]
      max-parallel: 4
      fail-fast: false

    env:
      DISCORD_CLIENT_ID: ""
      DISCORD_CLIENT_SECRET: ""
      DISCORD_OAUTH2_ORIGIN: "http://localhost:5173"
      POSTGRES_PRISMA_URL: postgres://postgres:postgres@postgres:5432/postgres
      POSTGRES_URL_NON_POOLING: postgres://postgres:postgres@postgres:5432/postgres

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
      - run: npm ci
      - run: npm run migrate:deploy
      - uses: actions/download-artifact@v5
        with:
          name: build
          path: build
      - run: npm run test:e2e -- --shard=${{ matrix.shard }}/${{ strategy.max-parallel }} --reporter=blob
        env:
          PLAYWRIGHT_BLOB_OUTPUT_FILE: blob-report/report-${{ matrix.shard }}.zip
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: blob-report-${{ matrix.shard }}
          path: blob-report
          retention-days: 1

  # https://playwright.dev/docs/test-sharding#github-actions-example
  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: ${{ !cancelled() }}
    needs: run

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version-file: package.json
          cache: npm
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v5
        with:
          path: blob-report
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter=html,github ./blob-report

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14
