name: E2E Tests

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      playwright-version: ${{ steps.get-playwright-version.outputs.playwright-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            node_modules
            build
            package.json
      - id: get-playwright-version
        run: echo "playwright-version=$(jq '.devDependencies["@playwright/test"]' -r package.json)" >> $GITHUB_OUTPUT

  check:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: mcr.microsoft.com/playwright:v${{ needs.build.outputs.playwright-version }}
      options: --user 1001
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        project: [Chrome, Safari, iPhone, Pixel]
      max-parallel: 4
      fail-fast: false

    env:
      DISCORD_CLIENT_ID: ""
      DISCORD_CLIENT_SECRET: ""
      DISCORD_OAUTH2_ORIGIN: "http://localhost:5173"
      POSTGRES_PRISMA_URL: postgres://postgres:postgres@postgres:5432/postgres
      POSTGRES_URL_NON_POOLING: postgres://postgres:postgres@postgres:5432/postgres

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build
      - run: npm run migrate:deploy
      - run: npm run test:e2e -- --project=${{ matrix.project }}
      - uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report
