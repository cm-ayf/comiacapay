// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "postgres"
  // url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
  url      = "postgresql://futaiwata@localhost:5432/comiacapay"
}

model User {
  id String @id

  name     String?
  username String
  picture  String?

  members  Member[]
  receipts Receipt[]
  sessions Session[]
}

model Session {
  id  String @id // snowflake
  sid String @unique // secure random string

  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  // from token response
  access_token  String
  token_type    String
  refresh_token String
  expires_in    Int
  scope         String
}

model Guild {
  id String @id

  name           String
  picture        String?
  readRoleId     String? @map("read_role_id")
  registerRoleId String? @map("register_role_id")
  writeRoleId    String? @map("write_role_id")

  members Member[]
  items   Item[]
  events  Event[]
}

model Member {
  user    User   @relation(fields: [userId], references: [id])
  userId  String @map("user_id")
  guild   Guild  @relation(fields: [guildId], references: [id])
  guildId String @map("guild_id")

  read     Boolean
  register Boolean
  write    Boolean
  admin    Boolean

  @@id([userId, guildId])
}

model Item {
  id String @id

  guild   Guild  @relation(fields: [guildId], references: [id])
  guildId String @map("guild_id")

  name     String
  picture  String?
  issuedAt DateTime @map("issued_at")

  displays Display[]
}

model Event {
  id String @id

  guild   Guild  @relation(fields: [guildId], references: [id])
  guildId String @map("guild_id")

  name      String
  date      DateTime
  /// [Discounts]
  discounts Json     @default("[]")

  displays Display[]
  receipts Receipt[]
}

model Display {
  event   Event  @relation(fields: [eventId], references: [id])
  eventId String @map("event_id")
  item    Item   @relation(fields: [itemId], references: [id])
  itemId  String @map("item_id")

  price         Int
  internalPrice Int?    @map("internal_price")
  dedication    Boolean @default(false)

  records Record[]

  @@id([eventId, itemId])
}

model Receipt {
  id String @id

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String @map("event_id")
  user    User   @relation(fields: [userId], references: [id])
  userId  String @map("user_id")

  total Int

  records Record[]
}

model Record {
  receipt   Receipt @relation(fields: [receiptId], references: [id])
  receiptId String  @map("receipt_id")
  display   Display @relation(fields: [eventId, itemId], references: [eventId, itemId])
  eventId   String  @map("event_id")
  itemId    String  @map("item_id")

  count      Int
  internal   Boolean @default(false)
  dedication Boolean @default(false)

  @@id([receiptId, itemId])
}
